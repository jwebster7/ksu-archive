'''
    Author: Joseph Webster & Michael Yangmi
    Date: 03.13.19
    Class: CIS 575 | Introduction to Algorithm Analysis
    Professor: Dr. Torben Amtoft
'''

************************************************************************************************
# Problem 4
# Run your Insertion Sort algorithm on 6 test sets: Pseudo-Random input and Almost Ordered input, each of size 100, of size 1,000, and of size 10,000. Report the running times (the number ofswaps).
************************************************************************************************
n = 100
Pseudo-Random Swaps: 2329
Almost-Ordered Swaps: 159

n = 1000
Pseudo-Random Swaps: 228229
Almost-Ordered Swaps: 1887

n = 10000
Pseudo-Random Swaps: 23079229
Almost-Ordered Swaps: 19203


************************************************************************************************
# Problem 6
# Write a program that implements the HeapSort algorithm. 
# Recall that the first step is to convert the array into a heap, as done by the pseudo-code
#	for i <- n downto 1
#		SIFT(i)
# Where SIFT is defined on the lecture slides (Max-Heapify). 
************************************************************************************************

n = 100
Pseudo-Random Swaps: 584
Almost-Ordered Swaps: 635

n = 1000
Pseudo-Random Swaps: 8986
Almost-Ordered Swaps: 9744

n = 10000
Pseudo-Random Swaps: 122662
Almost-Ordered Swaps: 131717

************************************************************************************************
# Problem 7
************************************************************************************************

n = 100
Pseudo-Random Swaps: 323
Almost-Ordered Swaps: 266

n = 1000
Pseudo-Random Swaps: 4698
Almost-Ordered Swaps: 4154

n = 10000
Pseudo-Random Swaps: 62564
Almost-Ordered Swaps: 58243